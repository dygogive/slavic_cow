import requests
from bs4 import BeautifulSoup
import schedule
import time
import datetime
import os
from threading import Thread
from pytz import timezone

# –¢–æ–∫–µ–Ω —ñ Chat ID –¥–ª—è Telegram
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –°–ø–∏—Å–æ–∫ ID —á–∞—Ç—ñ–≤
CHAT_ID_1 = "1037025457"
CHAT_ID_2 = "8171469284"
CHAT_IDS = [CHAT_ID_1, CHAT_ID_2]  

# URL —Å–∞–π—Ç—É
URL = "https://www.dar.gov.ua/news"

# –ß–∞—Å–æ–≤–∏–π –ø–æ—è—Å –ö–∏—î–≤–∞
KYIV_TZ = timezone("Europe/Kiev")

# –ì–ª–æ–±–∞–ª—å–Ω–∏–π –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞
is_bot_running = False

def send_telegram_message(text):
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É—Å—ñ–º —á–∞—Ç–∞–º."""
    for chat_id in CHAT_IDS:
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        params = {"chat_id": chat_id, "text": text}
        response = requests.get(url, params=params)
        print(f"Message sent to {chat_id}. Response: {response.status_code} - {response.text}")

def check_news():
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏–Ω."""
    global is_bot_running
    if not is_bot_running:
        return

    try:
        response = requests.get(URL)
        soup = BeautifulSoup(response.text, "html.parser")
        
        # –ó–Ω–∞–π—Ç–∏ –≤—Å—ñ –¥–∞—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
        dates = soup.find_all("p", class_="paragraph-18 textadata")

        if not dates:
            print("–î–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ú–æ–∂–ª–∏–≤–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç—É —ñ–Ω—à–∞.")
            send_telegram_message("üî¥ –î–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ú–æ–∂–ª–∏–≤–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç—É —ñ–Ω—à–∞.")
            return

        # –¶—ñ–ª—å–æ–≤–∞ –¥–∞—Ç–∞
        target_date = datetime.datetime.now(KYIV_TZ).strftime("%Y-%m-%d")
        print(f"–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ü—ñ–ª—å–æ–≤—É –¥–∞—Ç—É: {target_date}")

        found = False  # –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –±—É–ª–∞ –∑–Ω–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∏–Ω–∞

        for date_element in dates:
            date = date_element.text.strip()
            print(f"–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞—Ç—É: {date}")

            # –Ø–∫—â–æ –¥–∞—Ç–∞ –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑ —Ü—ñ–ª—å–æ–≤–æ—é
            if date == target_date:
                send_telegram_message(f"üü¢ –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–∏–Ω—É –∑ –¥–∞—Ç–æ—é {target_date}! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–∞–π—Ç: {URL}")
                print("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ.")
                found = True
                return  # –ó—É–ø–∏–Ω–∏—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ—ó –∑–Ω–∞–π–¥–µ–Ω–æ—ó –Ω–æ–≤–∏–Ω–∏

        # –Ø–∫—â–æ –Ω–æ–≤–∏–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞
        if not found:
            print(f"–ù–æ–≤–∏–Ω –∑ –¥–∞—Ç–æ—é {target_date} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        print("–ü–æ–º–∏–ª–∫–∞ —É –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∑–∞–ø–∏—Ç—É –∞–±–æ –ø–∞—Ä—Å–∏–Ω–≥—É:", e)

def send_status_message():
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è."""
    send_telegram_message("‚úÖ –°–∫—Ä–∏–ø—Ç –ø—Ä–∞—Ü—é—î!")

def handle_commands():
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥ —ñ–∑ Telegram."""
    global is_bot_running

    last_update_id = None
    while True:
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getUpdates"
        params = {"offset": last_update_id, "timeout": 10}
        response = requests.get(url, params=params)
        updates = response.json()["result"]

        for update in updates:
            last_update_id = update["update_id"] + 1
            if "message" in update:
                chat_id = str(update["message"]["chat"]["id"])
                text = update["message"].get("text", "")

                if chat_id in CHAT_IDS:
                    if text == "/start":
                        if not is_bot_running:
                            is_bot_running = True
                            send_telegram_message("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
                        else:
                            send_telegram_message("‚ö†Ô∏è –ë–æ—Ç —É–∂–µ –ø—Ä–∞—Ü—é—î.")
                    elif text == "/stop":
                        if is_bot_running:
                            is_bot_running = False
                            send_telegram_message("‚èπÔ∏è –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ.")
                        else:
                            send_telegram_message("‚ö†Ô∏è –ë–æ—Ç —É–∂–µ –∑—É–ø–∏–Ω–µ–Ω–æ.")
                    elif text == "/status":
                        status = "–ø—Ä–∞—Ü—é—î" if is_bot_running else "–∑—É–ø–∏–Ω–µ–Ω–æ"
                        send_telegram_message(f"‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {status}.")
                    else:
                        send_telegram_message("‚ùì –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /start, /stop –∞–±–æ /status.")

def run_schedule():
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É —Ä–æ–∑–∫–ª–∞–¥—É."""
    while True:
        schedule.run_pending()
        time.sleep(1)

# –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
send_telegram_message("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω–æ!")

# –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏–Ω –∫–æ–∂–Ω—ñ 10 —Ö–≤–∏–ª–∏–Ω
schedule.every(10).minutes.do(check_news)

# –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Å—Ç–∞—Ç—É—Å
schedule.every().day.at("08:00").do(send_status_message)
schedule.every().day.at("17:00").do(send_status_message)

# –ó–∞–ø—É—Å–∫ –±–∞–≥–∞—Ç–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—ñ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥ —ñ —Ä–æ–∑–∫–ª–∞–¥—É
if __name__ == "__main__":
    Thread(target=handle_commands).start()
    Thread(target=run_schedule).start()
